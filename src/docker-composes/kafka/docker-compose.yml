---
version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    volumes:
      - ./tmp/vol1/zk-data:/var/lib/zookeeper/data
      - ./tmp/vol2/zk-txn-logs:/var/lib/zookeeper/log
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - popug-jira

  broker:
    image: confluentinc/cp-kafka:7.1.1
    hostname: broker
    container_name: broker
    volumes:
      - ./tmp/vol3/kafka-data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: INTERNAL://broker:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:29092,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_TOOLS_LOG4J_LOGLEVEL: WARN
    networks:
      - popug-jira

  db:
    image: postgres
    container_name: psql
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - popug-jira
        
  tasks:
    image: async-tasks:1.2
    container_name: tasks
    ports:
      - "7203:7203"
      - "5203:5203"
    depends_on:
      - db
      - broker
    networks:
      - popug-jira

  oauth:
    container_name: oauth
    build: ./../../auth/.
    command: ['rails', 'server', '-p', '3000', '-b', '0.0.0.0']
    ports:
      - "3000:3000"
    depends_on:
      - db
      - broker
    environment:
      RAILS_ENV: 'development'
      DATABASE_URL: 'postgres://postgres:password@db:5432/postgres'
      KAFKA_URL: 'kafka://broker:29092'
      BROKER_ADAPTER: 'kafka'
    networks:
      - popug-jira
        
  kowl:
    image: quay.io/cloudhut/kowl:master-1d07695
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$KOWL_CONFIG_FILE\" > /tmp/config.yml; /app/kowl"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      KOWL_CONFIG_FILE: |
        kafka:
          brokers: ["broker:29092"]
    ports:
      - "8080:8080"
    depends_on:
      - broker
    networks:
      - popug-jira


# network needs to be created manually, by:
#  docker network create popug-jira
networks:
  popug-jira:
    driver: bridge
